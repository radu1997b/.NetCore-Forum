@model RoomViewModel

<style>
    #room-container .post {
        background-color: #F9F9F9;
        margin-top: 20px;
        border-radius:50px;
    }

    #user-name {
        color: red;
    }

    #topic-info {
        width: 100%;
        background-color: yellow;
        font-size: 2em;
        font-family: 'Arial';
        text-align: center;
        margin-top: 20px;
        border-radius: 20px;
        margin-bottom:20px;
    }
    #post-btn{
        width:150px;
        height:25px;
        margin-top:10px;
        position:relative;
        font-size:1.5em;
        vertical-align:middle;
        padding-bottom:30px;
    }
    #post-btn-wrapper{
        text-align:center;
    }
</style>

<div class="container" id="room-container">
    <div class="row" id="topic-info">
        <div class="col-sm-12">Topic Name: @Model.TopicName</div>
        <div class="col-sm-12">Room Name:@Model.RoomName</div>
        <div class="cols-sm-12">Number of Posts:@Model.NumberOfPosts</div>
    </div>
    <table id="room-table" class="table nowrap" style="width:100%;" cellspacing="0">
        <thead style="display:none;">
            <tr>
                <th>Id</th>
            </tr>
        </thead>
    </table>

    <script>

        $(document).ready(() => {

            $("#room-table").DataTable({

                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": false, // this is for disable filter (search box)
                "lengthChange": false,
                "ajax": {
                    "url": "/Post/GetPostsByRoom/",
                    "type": "GET",
                    "datatype": "json",
                    "data": function (d) {
                        let table = $("#room-table").DataTable();
                        d.numPage = table.page.info().page + 1;
                        d.pageSize = 10;
                        d.columnToSort = "PostDate";
                        d.order = "asc";
                        d.searchKeyword = "";
                        d.columnToSearch = "Message";
                        d.RoomID = @Model.RoomId;
                    }
                },
                "columnDefs":
                    [{
                        "targets": [0],
                        "visible": true,
                        "searchable": false,
                        "sortable": false,
                    }],
                "columns": [
                    {
                        "render": function (data, type, full, meta) {

                            $("#room-table tbody tr:nth-child(" + (meta.row + 1) + ")").html("");
                            $("#room-table tbody tr:nth-child(" + (meta.row + 1) + ")").append(`@await Html.PartialAsync("~/Views/Post/_PostPartial.cshtml")`);
                            var lastPost = $("#room-table tbody tr:nth-child(" + (meta.row + 1) + ") .post");
                            lastPost.find("#user-name").append(full.AuthorFullName);
                            lastPost.find("#num-of-post").append(full.AuthorNumberOfPosts);
                            lastPost.find("#email").append(full.AuthorEmail);
                            lastPost.find("#date").append(FormatDate(full.PostDate));
                            lastPost.find("#text").append(full.Message);
                            return "";
                        }
                    }
                ]
            });
            function FormatDate(date) {
                return date.substring(0, 10) + " " + date.substring(11,20);
            }
            $('#room-table').on('draw.dt', function () {
                $("body").trigger("resize");
            });
        });
    </script>
</div>

<div class="container" style="margin-top:20px">
    <div id="editor"></div>
</div>
<script src="https://cdn.ckeditor.com/ckeditor5/11.0.1/classic/ckeditor.js"></script>
<div id="post-btn-wrapper">
    <button id="post-btn" class="btn-success" onclick="SendPost()">Post</button>
</div>



<script>
    let theEditor;
    ClassicEditor
        .create(document.querySelector('#editor'), {
            toolbar: ['heading', '|', 'bold', 'italic', 'link', 'bulletedList', 'numberedList', 'blockQuote', 'undo', 'redo'],
            fontFamily: {
                options: [
                    'default',
                    'Arial, Helvetica, sans-serif',
                    'Courier New, Courier, monospace',
                    'Georgia, serif',
                    'Lucida Sans Unicode, Lucida Grande, sans-serif',
                    'Tahoma, Geneva, sans-serif',
                    'Times New Roman, Times, serif',
                    'Trebuchet MS, Helvetica, sans-serif',
                    'Verdana, Geneva, sans-serif'
                ]
            },
            heading: {
                options: [
                    { model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },
                    { model: 'heading1', view: 'h1', title: 'Heading 1', class: 'ck-heading_heading1' },
                    { model: 'heading2', view: 'h2', title: 'Heading 2', class: 'ck-heading_heading2' }
                ]
            }
        }).
        then(editor => {
            theEditor = editor;
        })
        .catch(error => {
            console.error(error);
        });
    var SendPost = () => {
        $.post("/Post/CreatePost",{
            RoomId:@Model.RoomId,
            Message: theEditor.getData()
        });
        location.reload();
    };
    console.log(ClassicEditor.builtinPlugins.map(plugin => plugin.pluginName));
</script>